com/huawei/agconnect/https/adapter/JsonAdapterFactory = Huawei.Agconnect.Https.Adapter.JsonAdapterFactory
  <init>()V = .ctor()
com/huawei/agconnect/https/adapter/JsonBodyAdapterFactory = Huawei.Agconnect.Https.Adapter.JsonBodyAdapterFactory
  <init>()V = .ctor()
com/huawei/agconnect/https/adapter/StringAdapterFactory = Huawei.Agconnect.Https.Adapter.StringAdapterFactory
  <init>()V = .ctor()
com/huawei/agconnect/https/Adapter = Huawei.Agconnect.Https.IAdapter
  adapter(Ljava/lang/Object;)Ljava/lang/Object; = Adapter(Java.Lang.Object)
com/huawei/agconnect/https/annotation/Body = Huawei.Agconnect.Https.Annotation.IBody
com/huawei/agconnect/https/annotation/Field = Huawei.Agconnect.Https.Annotation.IField
  value()Ljava/lang/String; = Value()
com/huawei/agconnect/https/annotation/Header = Huawei.Agconnect.Https.Annotation.IHeader
  value()Ljava/lang/String; = Value()
com/huawei/agconnect/https/annotation/HeaderMap = Huawei.Agconnect.Https.Annotation.IHeaderMap
com/huawei/agconnect/https/annotation/Query = Huawei.Agconnect.Https.Annotation.IQuery
  encoded()Z = Encoded()
  value()Ljava/lang/String; = Value()
com/huawei/agconnect/https/annotation/Result = Huawei.Agconnect.Https.Annotation.IResult
  value()Ljava/lang/String; = Value()
com/huawei/agconnect/https/annotation/Url = Huawei.Agconnect.Https.Annotation.IUrl
com/huawei/agconnect/https/HttpsException = Huawei.Agconnect.Https.HttpsException
  <init>(ZLjava/io/IOException;)V = .ctor(bool, Java.IO.IOException)
  <init>(ZLjava/lang/String;)V = .ctor(bool, string)
  getException()Ljava/io/IOException; = Exception
  hasRequest()Z = HasRequest
  message()Ljava/lang/String; = InvokeMessage()
com/huawei/agconnect/https/HttpsKit = Huawei.Agconnect.Https.HttpsKit
  client()Lokhttp3/OkHttpClient; = Client()
  create(Landroid/content/Context;)Lcom/huawei/agconnect/https/Service; = Create(Android.Content.Context)
  executor()Ljava/util/concurrent/Executor; = Executor()
com/huawei/agconnect/https/HttpsResult = Huawei.Agconnect.Https.HttpsResult
  getErrorMsg()Ljava/lang/String; = ErrorMsg
  isSuccess()Z = IsSuccess
  getResponse()Ljava/lang/String; = Response
  code()I = Code()
  getResponse(Ljava/lang/Class;Lcom/huawei/agconnect/https/Adapter$Factory;)Ljava/lang/Object; = GetResponse(Java.Lang.Class, Huawei.Agconnect.Https.AdapterFactory)
com/huawei/agconnect/https/Method = Huawei.Agconnect.Https.Method
  <init>()V = .ctor()
com/huawei/agconnect/https/OKHttpBuilder = Huawei.Agconnect.Https.OKHttpBuilder
  <init>()V = .ctor()
  addInterceptor(Lokhttp3/Interceptor;)Lcom/huawei/agconnect/https/OKHttpBuilder; = AddInterceptor(Square.OkHttp3.IInterceptor)
  build()Lokhttp3/OkHttpClient; = Build()
  connectTimeout(J)Lcom/huawei/agconnect/https/OKHttpBuilder; = ConnectTimeout(long)
  enableGzip()Lcom/huawei/agconnect/https/OKHttpBuilder; = EnableGzip()
  readTimeout(J)Lcom/huawei/agconnect/https/OKHttpBuilder; = ReadTimeout(long)
  setRetryTimes(I)Lcom/huawei/agconnect/https/OKHttpBuilder; = SetRetryTimes(int)
  sslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/X509TrustManager;)Lcom/huawei/agconnect/https/OKHttpBuilder; = SslSocketFactory(Javax.Net.Ssl.SSLSocketFactory, Javax.Net.Ssl.IX509TrustManager)
  writeTimeout(J)Lcom/huawei/agconnect/https/OKHttpBuilder; = WriteTimeout(long)
com/huawei/agconnect/https/Service = Huawei.Agconnect.Https.IService
  execute(Lcom/huawei/agconnect/https/Method;)Lcom/huawei/hmf/tasks/Task; = Execute(Huawei.Agconnect.Https.Method)
