com/huawei/hmf/tasks/BuildConfig = Huawei.Hmf.Tasks.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/huawei/hmf/tasks/CancellationToken = Huawei.Hmf.Tasks.CancellationToken
  <init>()V = .ctor()
  isCancellationRequested()Z = IsCancellationRequested
  register(Ljava/lang/Runnable;)Lcom/huawei/hmf/tasks/CancellationToken; = Register(Java.Lang.IRunnable)
com/huawei/hmf/tasks/CancellationTokenSource = Huawei.Hmf.Tasks.CancellationTokenSource
  <init>()V = .ctor()
  getToken()Lcom/huawei/hmf/tasks/CancellationToken; = Token
  cancel()V = Cancel()
com/huawei/hmf/tasks/Continuation = Huawei.Hmf.Tasks.IContinuation
  then(Lcom/huawei/hmf/tasks/Task;)Ljava/lang/Object; = Then(Huawei.Hmf.Tasks.Task)
com/huawei/hmf/tasks/ExecuteResult = Huawei.Hmf.Tasks.IExecuteResult
  cancel()V = Cancel()
  onComplete(Lcom/huawei/hmf/tasks/Task;)V = OnComplete(Huawei.Hmf.Tasks.Task)
com/huawei/hmf/tasks/OnCanceledListener = Huawei.Hmf.Tasks.IOnCanceledListener
  onCanceled()V = OnCanceled()
com/huawei/hmf/tasks/OnCompleteListener = Huawei.Hmf.Tasks.IOnCompleteListener
  onComplete(Lcom/huawei/hmf/tasks/Task;)V = OnComplete(Huawei.Hmf.Tasks.Task)
com/huawei/hmf/tasks/OnFailureListener = Huawei.Hmf.Tasks.IOnFailureListener
  onFailure(Ljava/lang/Exception;)V = OnFailure(Java.Lang.Exception)
com/huawei/hmf/tasks/OnSuccessListener = Huawei.Hmf.Tasks.IOnSuccessListener
  onSuccess(Ljava/lang/Object;)V = OnSuccess(Java.Lang.Object)
com/huawei/hmf/tasks/SuccessContinuation = Huawei.Hmf.Tasks.ISuccessContinuation
  then(Ljava/lang/Object;)Lcom/huawei/hmf/tasks/Task; = Then(Java.Lang.Object)
com/huawei/hmf/tasks/Task = Huawei.Hmf.Tasks.Task
  <init>()V = .ctor()
  getException()Ljava/lang/Exception; = Exception
  isCanceled()Z = IsCanceled
  isComplete()Z = IsComplete
  isSuccessful()Z = IsSuccessful
  getResult()Ljava/lang/Object; = RawResult
  addOnCanceledListener(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task; = AddOnCanceledListener(Android.App.Activity, Huawei.Hmf.Tasks.IOnCanceledListener)
  addOnCanceledListener(Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task; = AddOnCanceledListener(Huawei.Hmf.Tasks.IOnCanceledListener)
  addOnCanceledListener(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCanceledListener;)Lcom/huawei/hmf/tasks/Task; = AddOnCanceledListener(Java.Util.Concurrent.IExecutor, Huawei.Hmf.Tasks.IOnCanceledListener)
  addOnCompleteListener(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task; = AddOnCompleteListener(Android.App.Activity, Huawei.Hmf.Tasks.IOnCompleteListener)
  addOnCompleteListener(Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task; = AddOnCompleteListener(Huawei.Hmf.Tasks.IOnCompleteListener)
  addOnCompleteListener(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnCompleteListener;)Lcom/huawei/hmf/tasks/Task; = AddOnCompleteListener(Java.Util.Concurrent.IExecutor, Huawei.Hmf.Tasks.IOnCompleteListener)
  addOnFailureListener(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task; = AddOnFailureListener(Android.App.Activity, Huawei.Hmf.Tasks.IOnFailureListener)
  addOnFailureListener(Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task; = AddOnFailureListener(Huawei.Hmf.Tasks.IOnFailureListener)
  addOnFailureListener(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnFailureListener;)Lcom/huawei/hmf/tasks/Task; = AddOnFailureListener(Java.Util.Concurrent.IExecutor, Huawei.Hmf.Tasks.IOnFailureListener)
  addOnSuccessListener(Landroid/app/Activity;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task; = AddOnSuccessListener(Android.App.Activity, Huawei.Hmf.Tasks.IOnSuccessListener)
  addOnSuccessListener(Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task; = AddOnSuccessListener(Huawei.Hmf.Tasks.IOnSuccessListener)
  addOnSuccessListener(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/OnSuccessListener;)Lcom/huawei/hmf/tasks/Task; = AddOnSuccessListener(Java.Util.Concurrent.IExecutor, Huawei.Hmf.Tasks.IOnSuccessListener)
  continueWith(Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task; = ContinueWith(Huawei.Hmf.Tasks.IContinuation)
  continueWith(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task; = ContinueWith(Java.Util.Concurrent.IExecutor, Huawei.Hmf.Tasks.IContinuation)
  continueWithTask(Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task; = ContinueWithTask(Huawei.Hmf.Tasks.IContinuation)
  continueWithTask(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/Continuation;)Lcom/huawei/hmf/tasks/Task; = ContinueWithTask(Java.Util.Concurrent.IExecutor, Huawei.Hmf.Tasks.IContinuation)
  getResultThrowException(Ljava/lang/Class;)Ljava/lang/Object; = GetResultThrowException(Java.Lang.Class)
  onSuccessTask(Lcom/huawei/hmf/tasks/SuccessContinuation;)Lcom/huawei/hmf/tasks/Task; = OnSuccessTask(Huawei.Hmf.Tasks.ISuccessContinuation)
  onSuccessTask(Ljava/util/concurrent/Executor;Lcom/huawei/hmf/tasks/SuccessContinuation;)Lcom/huawei/hmf/tasks/Task; = OnSuccessTask(Java.Util.Concurrent.IExecutor, Huawei.Hmf.Tasks.ISuccessContinuation)
com/huawei/hmf/tasks/TaskCompletionSource = Huawei.Hmf.Tasks.TaskCompletionSource
  <init>()V = .ctor()
  <init>(Lcom/huawei/hmf/tasks/CancellationToken;)V = .ctor(Huawei.Hmf.Tasks.CancellationToken)
  getTask()Lcom/huawei/hmf/tasks/Task; = Task
  setException(Ljava/lang/Exception;)V = SetException(Java.Lang.Exception)
  setResult(Ljava/lang/Object;)V = SetResult(Java.Lang.Object)
com/huawei/hmf/tasks/TaskExecutors = Huawei.Hmf.Tasks.TaskExecutors
  immediate()Ljava/util/concurrent/Executor; = Immediate()
  uiThread()Ljava/util/concurrent/Executor; = UiThread()
com/huawei/hmf/tasks/Tasks = Huawei.Hmf.Tasks.Tasks
  <init>()V = .ctor()
  allOf([Lcom/huawei/hmf/tasks/Task;)Lcom/huawei/hmf/tasks/Task; = AllOf(params Huawei.Hmf.Tasks.Task[])
  allOf(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task; = AllOf(System.Collections.Generic.ICollection<Huawei.Hmf.Tasks.Task>)
  await(Lcom/huawei/hmf/tasks/Task;)Ljava/lang/Object; = Await(Huawei.Hmf.Tasks.Task)
  await(Lcom/huawei/hmf/tasks/Task;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object; = Await(Huawei.Hmf.Tasks.Task, long, Java.Util.Concurrent.TimeUnit)
  call(Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task; = Call(Java.Util.Concurrent.ICallable)
  callInBackground(Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task; = CallInBackground(Java.Util.Concurrent.ICallable)
  callInBackground(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Lcom/huawei/hmf/tasks/Task; = CallInBackground(Java.Util.Concurrent.IExecutor, Java.Util.Concurrent.ICallable)
  fromCanceled()Lcom/huawei/hmf/tasks/Task; = FromCanceled()
  fromException(Ljava/lang/Exception;)Lcom/huawei/hmf/tasks/Task; = FromException(Java.Lang.Exception)
  fromResult(Ljava/lang/Object;)Lcom/huawei/hmf/tasks/Task; = FromResult(Java.Lang.Object)
  join([Lcom/huawei/hmf/tasks/Task;)Lcom/huawei/hmf/tasks/Task; = Join(params Huawei.Hmf.Tasks.Task[])
  join(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task; = Join(System.Collections.Generic.ICollection<Huawei.Hmf.Tasks.Task>)
  successOf([Lcom/huawei/hmf/tasks/Task;)Lcom/huawei/hmf/tasks/Task; = SuccessOf(params Huawei.Hmf.Tasks.Task[])
  successOf(Ljava/util/Collection;)Lcom/huawei/hmf/tasks/Task; = SuccessOf(System.Collections.ICollection)
