com/huawei/hms/framework/common/BuildConfig = Huawei.Hms.Framework.Common.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/huawei/hms/framework/common/CheckParamUtils = Huawei.Hms.Framework.Common.CheckParamUtils
  <init>()V = .ctor()
  checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; = CheckNotNull(Java.Lang.Object, string)
  checkNumParam(IIIILjava/lang/String;)I = CheckNumParam(int, int, int, int, string)
  checkNumParam(JJJJLjava/lang/String;)J = CheckNumParam(long, long, long, long, string)
  checkOffsetAndCount(JJJ)V = CheckOffsetAndCount(long, long, long)
com/huawei/hms/framework/common/ContainerUtils = Huawei.Hms.Framework.Common.ContainerUtils
  <init>()V = .ctor()
  FIELD_DELIMITER = FieldDelimiter
  KEY_VALUE_DELIMITER = KeyValueDelimiter
  equals(Ljava/util/Map;Ljava/util/Map;)Z = Equals(System.Collections.IDictionary, System.Collections.IDictionary)
  hashCode(Ljava/util/Map;)I = HashCode(System.Collections.IDictionary)
  toString(Ljava/util/List;)Ljava/lang/String; = ToString(System.Collections.IList)
  toString(Ljava/util/Map;)Ljava/lang/String; = ToString(System.Collections.IDictionary)
  toString(Ljava/util/Set;)Ljava/lang/String; = ToString(System.Collections.ICollection)
com/huawei/hms/framework/common/ExceptionCode = Huawei.Hms.Framework.Common.ExceptionCode
  <init>()V = .ctor()
  CANCEL = Cancel
  CONNECT_FAILED = ConnectFailed
  CONNECTION_ABORT = ConnectionAbort
  CONNECTION_REFUSED = ConnectionRefused
  CONNECTION_RESET = ConnectionReset
  CRASH_EXCEPTION = CrashException
  INTERRUPT_CONNECT_CLOSE = InterruptConnectClose
  INTERRUPT_EXCEPTION = InterruptException
  NETWORK_CHANGED = NetworkChanged
  NETWORK_IO_EXCEPTION = NetworkIoException
  NETWORK_UNREACHABLE = NetworkUnreachable
  PROTOCOL_ERROR = ProtocolError
  READ_ERROR = ReadError
  ROUTE_FAILED = RouteFailed
  SHUTDOWN_EXCEPTION = ShutdownException
  SOCKET_CLOSE = SocketClose
  SOCKET_CONNECT_TIMEOUT = SocketConnectTimeout
  SOCKET_READ_TIMEOUT = SocketReadTimeout
  SOCKET_TIMEOUT = SocketTimeout
  SOCKET_WRITE_TIMEOUT = SocketWriteTimeout
  SSL_HANDSHAKE_EXCEPTION = SslHandshakeException
  SSL_PEERUNVERIFIED_EXCEPTION = SslPeerunverifiedException
  SSL_PROTOCOL_EXCEPTION = SslProtocolException
  UNABLE_TO_RESOLVE_HOST = UnableToResolveHost
  UNEXPECTED_EOF = UnexpectedEof
  getErrorCodeFromException(Ljava/lang/Exception;)I = GetErrorCodeFromException(Java.Lang.Exception)
com/huawei/hms/framework/common/ExecutorsEnhance = Huawei.Hms.Framework.Common.ExecutorsEnhance
  <init>()V = .ctor()
  newSingleThreadExecutor(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService; = NewSingleThreadExecutor(Java.Util.Concurrent.IThreadFactory)
com/huawei/hms/framework/common/ExecutorsUtils = Huawei.Hms.Framework.Common.ExecutorsUtils
  <init>()V = .ctor()
  createThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory; = CreateThreadFactory(string)
  newCachedThreadPool(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; = NewCachedThreadPool(string)
  newFixedThreadPool(ILjava/lang/String;)Ljava/util/concurrent/ExecutorService; = NewFixedThreadPool(int, string)
  newScheduledThreadPool(ILjava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService; = NewScheduledThreadPool(int, string)
  newSingleThreadExecutor(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; = NewSingleThreadExecutor(string)
com/huawei/hms/framework/common/ExtLogger = Huawei.Hms.Framework.Common.ExtLogger
  <init>()V = .ctor()
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, string, Java.Lang.Throwable)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  v(Ljava/lang/String;Ljava/lang/String;)V = V(string, string)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
  w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, string, Java.Lang.Throwable)
com/huawei/hms/framework/common/hianalytics/CrashHianalyticsData = Huawei.Hms.Framework.Common.Hianalytics.CrashHianalyticsData
  <init>()V = .ctor()
  EXCEPTION_NAME = ExceptionName
  MESSAGE = Message
  PROCESS_ID = ProcessId
  STACK_TRACE = StackTrace
  THREAD_ID = ThreadId
  THREAD_NAME = ThreadName
  TIME = Time
com/huawei/hms/framework/common/hianalytics/HianalyticsBaseData = Huawei.Hms.Framework.Common.Hianalytics.HianalyticsBaseData
  <init>()V = .ctor()
  SDK_NAME = SdkName
  get()Ljava/util/LinkedHashMap; = Get()
  put(Ljava/lang/String;Ljava/lang/String;)Lcom/huawei/hms/framework/common/hianalytics/HianalyticsBaseData; = Put(string, string)
  put(Ljava/lang/String;J)Lcom/huawei/hms/framework/common/hianalytics/HianalyticsBaseData; = Put(string, long)
  put(Ljava/util/LinkedHashMap;)Lcom/huawei/hms/framework/common/hianalytics/HianalyticsBaseData; = Put(Java.Util.LinkedHashMap)
com/huawei/hms/framework/common/hianalytics/HianalyticsHelper = Huawei.Hms.Framework.Common.Hianalytics.HianalyticsHelper
  getInstance()Lcom/huawei/hms/framework/common/hianalytics/HianalyticsHelper; = Instance
  getReportExecutor()Ljava/util/concurrent/ExecutorService; = ReportExecutor
  isEnableReport(Landroid/content/Context;)Z = IsEnableReport(Android.Content.Context)
  isEnableReportNoSeed(Landroid/content/Context;)Z = IsEnableReportNoSeed(Android.Content.Context)
  onEvent(Ljava/util/LinkedHashMap;)V = OnEvent(Java.Util.LinkedHashMap)
  onEvent(Ljava/util/LinkedHashMap;Ljava/lang/String;)V = OnEvent(Java.Util.LinkedHashMap, string)
  reportException(Ljava/lang/Throwable;Ljava/lang/String;)V = ReportException(Java.Lang.Throwable, string)
  setHaTag(Ljava/lang/String;)V = SetHaTag(string)
com/huawei/hms/framework/common/hianalytics/LinkedHashMapPack = Huawei.Hms.Framework.Common.Hianalytics.LinkedHashMapPack
  <init>()V = .ctor()
  getAll()Ljava/util/LinkedHashMap; = All
  put(Ljava/lang/String;Z)Lcom/huawei/hms/framework/common/hianalytics/LinkedHashMapPack; = Put(string, bool)
  put(Ljava/lang/String;Ljava/lang/String;)Lcom/huawei/hms/framework/common/hianalytics/LinkedHashMapPack; = Put(string, string)
  put(Ljava/lang/String;J)Lcom/huawei/hms/framework/common/hianalytics/LinkedHashMapPack; = Put(string, long)
com/huawei/hms/framework/common/IoUtils = Huawei.Hms.Framework.Common.IoUtils
  close(Landroid/database/Cursor;)V = Close(Android.Database.ICursor)
  closeSecure(Ljava/io/OutputStream;)V = CloseOutputStream(System.IO.Stream)
  closeSecure(Ljava/io/Closeable;)V = CloseSecure(Java.IO.ICloseable)
  closeSecure(Ljava/io/InputStream;)V = CloseSecure(System.IO.Stream)
  closeSecure(Ljava/io/Reader;)V = CloseSecure(Java.IO.Reader)
  closeSecure(Ljava/io/Writer;)V = CloseSecure(Java.IO.Writer)
  copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J = Copy(System.IO.Stream, System.IO.Stream)
  toByteArray(Ljava/io/InputStream;)[B = ToByteArray(System.IO.Stream)
com/huawei/hms/framework/common/LimitQueue = Huawei.Hms.Framework.Common.LimitQueue
  <init>(I)V = .ctor(int)
  <init>(IZ)V = .ctor(int, bool)
  <init>(Ljava/util/Collection;Z)V = .ctor(System.Collections.ICollection, bool)
  getLimit()I = Limit
  add(Ljava/lang/Object;)Z = Add(Java.Lang.Object)
  addAll(Ljava/util/Collection;)Z = AddAll(System.Collections.ICollection)
  get(I)Ljava/lang/Object; = Get(int)
  offer(Ljava/lang/Object;)Z = Offer(Java.Lang.Object)
  peekLast()Ljava/lang/Object; = PeekLast()
com/huawei/hms/framework/common/Logger = Huawei.Hms.Framework.Common.Logger
  <init>()V = .ctor()
  d(Ljava/lang/String;Ljava/lang/Object;)V = D(string, Java.Lang.Object)
  d(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = D(string, string, params Java.Lang.Object[])
  e(Ljava/lang/String;Ljava/lang/Object;)V = E(string, Java.Lang.Object)
  e(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = E(string, string, params Java.Lang.Object[])
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, string, Java.Lang.Throwable)
  i(Ljava/lang/String;Ljava/lang/Object;)V = I(string, Java.Lang.Object)
  i(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = I(string, string, params Java.Lang.Object[])
  isAPPLoggable(I)Z = IsAPPLoggable(int)
  isLoggable(I)Z = IsLoggable(int)
  println(ILjava/lang/String;Ljava/lang/Object;)V = Println(int, string, Java.Lang.Object)
  println(ILjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = Println(int, string, string, params Java.Lang.Object[])
  setExtLogger(Lcom/huawei/hms/framework/common/ExtLogger;Z)V = SetExtLogger(Huawei.Hms.Framework.Common.ExtLogger, bool)
  v(Ljava/lang/String;Ljava/lang/Object;)V = V(string, Java.Lang.Object)
  v(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = V(string, string, params Java.Lang.Object[])
  w(Ljava/lang/String;Ljava/lang/Object;)V = W(string, Java.Lang.Object)
  w(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = W(string, string, params Java.Lang.Object[])
  w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, string, Java.Lang.Throwable)
com/huawei/hms/framework/common/PackageUtils = Huawei.Hms.Framework.Common.PackageUtils
  <init>()V = .ctor()
  getVersionName(Landroid/content/Context;)Ljava/lang/String; = GetVersionName(Android.Content.Context)
com/huawei/hms/framework/common/PLSharedPreferences = Huawei.Hms.Framework.Common.PLSharedPreferences
  <init>(Landroid/content/Context;Ljava/lang/String;)V = .ctor(Android.Content.Context, string)
  getAll()Ljava/util/Map; = All
  clear()V = Clear()
  edit()Landroid/content/SharedPreferences$Editor; = Edit()
  getLong(Ljava/lang/String;J)J = GetLong(string, long)
  getString(Ljava/lang/String;)Ljava/lang/String; = GetString(string)
  getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetString(string, string)
  putLong(Ljava/lang/String;J)V = PutLong(string, long)
  putString(Ljava/lang/String;Ljava/lang/String;)V = PutString(string, string)
  remove(Ljava/lang/String;)V = Remove(string)
  removeKeyValue(Ljava/lang/String;)V = RemoveKeyValue(string)
com/huawei/hms/framework/common/ReflectionUtils = Huawei.Hms.Framework.Common.ReflectionUtils
  <init>()V = .ctor()
  checkCompatible(Ljava/lang/String;)Z = CheckCompatible(string)
  getFieldObj(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; = GetFieldObj(Java.Lang.Object, string)
  getStaticFieldObj(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; = GetStaticFieldObj(string, string)
  invokeStaticMethod(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object; = InvokeStaticMethod(string, string, Java.Lang.Class[], params Java.Lang.Object[])
  invokeStaticMethod(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object; = InvokeStaticMethod(string, string, params Java.Lang.Object[])
com/huawei/hms/framework/common/RunnableEnhance = Huawei.Hms.Framework.Common.RunnableEnhance
  getParentName()Ljava/lang/String; = ParentName
  run()V = Run()
com/huawei/hms/framework/common/RunnableScheduledFutureEnhance = Huawei.Hms.Framework.Common.RunnableScheduledFutureEnhance
  <init>(Ljava/util/concurrent/RunnableScheduledFuture;)V = .ctor(Java.Util.Concurrent.IRunnableScheduledFuture)
  isCancelled()Z = IsCancelled
  isDone()Z = IsDone
  isPeriodic()Z = IsPeriodic
  getParentName()Ljava/lang/String; = ParentName
  cancel(Z)Z = Cancel(bool)
  compareTo(Ljava/util/concurrent/Delayed;)I = CompareTo(Java.Util.Concurrent.IDelayed)
  CompareTo(Ljava/lang/Object;)I = CompareTo(Java.Lang.Object)
  get()Ljava/lang/Object; = Get()
  get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object; = Get(long, Java.Util.Concurrent.TimeUnit)
  getDelay(Ljava/util/concurrent/TimeUnit;)J = GetDelay(Java.Util.Concurrent.TimeUnit)
  run()V = Run()
com/huawei/hms/framework/common/ScheduledThreadPoolExecutorEnhance = Huawei.Hms.Framework.Common.ScheduledThreadPoolExecutorEnhance
  <init>(ILjava/util/concurrent/ThreadFactory;)V = .ctor(int, Java.Util.Concurrent.IThreadFactory)
  decorateTask(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture; = DecorateTask(Java.Lang.IRunnable, Java.Util.Concurrent.IRunnableScheduledFuture)
  decorateTask(Ljava/util/concurrent/Callable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture; = DecorateTask(Java.Util.Concurrent.ICallable, Java.Util.Concurrent.IRunnableScheduledFuture)
com/huawei/hms/framework/common/SecurityBase64Utils = Huawei.Hms.Framework.Common.SecurityBase64Utils
  <init>()V = .ctor()
  decode(Ljava/lang/String;I)[B = Decode(string, int)
  encodeToString([BI)Ljava/lang/String; = EncodeToString(byte[], int)
com/huawei/hms/framework/common/StringUtils = Huawei.Hms.Framework.Common.StringUtils
  <init>()V = .ctor()
  anonymizeMessage(Ljava/lang/String;)Ljava/lang/String; = AnonymizeMessage(string)
  byte2Str([B)Ljava/lang/String; = Byte2Str(byte[])
  format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; = Format(string, params Java.Lang.Object[])
  getBytes(Ljava/lang/String;)[B = GetBytes(string)
  getBytes(J)[B = GetBytes(long)
  getTraceInfo(Ljava/lang/Throwable;)Ljava/lang/String; = GetTraceInfo(Java.Lang.Throwable)
  replace(Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String; = Replace(string, Java.Lang.ICharSequence, Java.Lang.ICharSequence)
  str2Byte(Ljava/lang/String;)[B = Str2Byte(string)
  strEquals(Ljava/lang/String;Ljava/lang/String;)Z = StrEquals(string, string)
  stringToInteger(Ljava/lang/String;I)I = StringToInteger(string, int)
  stringToLong(Ljava/lang/String;J)J = StringToLong(string, long)
  substring(Ljava/lang/String;I)Ljava/lang/String; = Substring(string, int)
  substring(Ljava/lang/String;II)Ljava/lang/String; = Substring(string, int, int)
  toLowerCase(Ljava/lang/String;)Ljava/lang/String; = ToLowerCase(string)
com/huawei/hms/framework/common/SystemPropUtils = Huawei.Hms.Framework.Common.SystemPropUtils
  <init>()V = .ctor()
  getProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetProperty(string, string, string, string)
com/huawei/hms/framework/common/ThreadPoolExcutorEnhance = Huawei.Hms.Framework.Common.ThreadPoolExcutorEnhance
  <init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V = .ctor(int, int, long, Java.Util.Concurrent.TimeUnit, Java.Util.Concurrent.IBlockingQueue, Java.Util.Concurrent.IThreadFactory)
com/huawei/hms/framework/common/Utils = Huawei.Hms.Framework.Common.Utils
  <init>()V = .ctor()
  getCurrentTime(Z)J = GetCurrentTime(bool)
