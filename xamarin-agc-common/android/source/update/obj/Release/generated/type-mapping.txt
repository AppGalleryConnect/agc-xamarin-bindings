com/huawei/updatesdk/fileprovider/UpdateSdkFileProvider = Huawei.Updatesdk.Fileprovider.UpdateSdkFileProvider
  <init>()V = .ctor()
  AUTHORITIES_SUFFIX = AuthoritiesSuffix
  delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I = Delete(Android.Net.Uri, string, string[])
  getType(Landroid/net/Uri;)Ljava/lang/String; = GetType(Android.Net.Uri)
  getUriForFile(Landroid/content/Context;Ljava/lang/String;Ljava/io/File;)Landroid/net/Uri; = GetUriForFile(Android.Content.Context, string, Java.IO.File)
  insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri; = Insert(Android.Net.Uri, Android.Content.ContentValues)
  onCreate()Z = OnCreate()
  query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; = Query(Android.Net.Uri, string[], string, string[], string)
  update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I = Update(Android.Net.Uri, Android.Content.ContentValues, string, string[])
com/huawei/updatesdk/service/appmgr/bean/AppInfoAdapter = Com.Huawei.Updatesdk.Service.Appmgr.Bean.AppInfoAdapter
  <init>()V = .ctor()
  getAppId()Ljava/lang/String; = AppId
  setAppId(Ljava/lang/String;)V = AppId
  getAppStorePkgName()Ljava/lang/String; = AppStorePkgName
  setAppStorePkgName(Ljava/lang/String;)V = AppStorePkgName
  getBusiness()Ljava/lang/String; = Business
  setBusiness(Ljava/lang/String;)V = Business
  getCarrierId()Ljava/lang/String; = CarrierId
  setCarrierId(Ljava/lang/String;)V = CarrierId
  getMinIntervalDay()I = MinIntervalDay
  setMinIntervalDay(I)V = MinIntervalDay
  isMustBtnOne()Z = MustBtnOne
  setMustBtnOne(Z)V = MustBtnOne
  getPackageList()Ljava/util/List; = PackageList
  setPackageList(Ljava/util/List;)V = PackageList
  getServiceZone()Ljava/lang/String; = ServiceZone
  setServiceZone(Ljava/lang/String;)V = ServiceZone
  isShowImmediate()Z = ShowImmediate
  setShowImmediate(Z)V = ShowImmediate
  getTargetPkgName()Ljava/lang/String; = TargetPkgName
  setTargetPkgName(Ljava/lang/String;)V = TargetPkgName
com/huawei/updatesdk/service/otaupdate/AppUpdateActivity = Huawei.Updatesdk.Service.Otaupdate.AppUpdateActivity
  <init>()V = .ctor()
  a(I)V = A(int)
  b(I)V = B(int)
  onActivityResult(IILandroid/content/Intent;)V = OnActivityResult(int, Android.App.Result, Android.Content.Intent)
com/huawei/updatesdk/service/otaupdate/CheckUpdateCallBack = Huawei.Updatesdk.Service.Otaupdate.ICheckUpdateCallBack
  onMarketInstallInfo(Landroid/content/Intent;)V = OnMarketInstallInfo(Android.Content.Intent)
  onMarketStoreError(I)V = OnMarketStoreError(int)
  onUpdateInfo(Landroid/content/Intent;)V = OnUpdateInfo(Android.Content.Intent)
  onUpdateStoreError(I)V = OnUpdateStoreError(int)
com/huawei/updatesdk/service/otaupdate/UpdateDialogStatusCode = Huawei.Updatesdk.Service.Otaupdate.IUpdateDialogStatusCode
  DISMISS = Dismiss
  SHOW = Show
com/huawei/updatesdk/service/otaupdate/UpdateKey = Huawei.Updatesdk.Service.Otaupdate.IUpdateKey
  BUTTON_STATUS = ButtonStatus
  DIALOG_STATUS = DialogStatus
  FAIL_CODE = FailCode
  FAIL_REASON = FailReason
  INFO = Info
  INFO_LIST = InfoList
  MARKET_DLD_STATUS = MarketDldStatus
  MARKET_INSTALL_STATE = MarketInstallState
  MARKET_INSTALL_TYPE = MarketInstallType
  MUST_UPDATE = MustUpdate
  REQUEST_SIGN = RequestSign
  RESPONSE_CODE = ResponseCode
  STATUS = Status
com/huawei/updatesdk/service/otaupdate/UpdateParams = Huawei.Updatesdk.Service.Otaupdate.UpdateParams
  isMustBtnOne()Z = IsMustBtnOne
  isShowImmediate()Z = IsShowImmediate
  getMinIntervalDay()I = MinIntervalDay
  getPackageList()Ljava/util/List; = PackageList
  getServiceZone()Ljava/lang/String; = ServiceZone
  getTargetPkgName()Ljava/lang/String; = TargetPkgName
  resetParamList()V = ResetParamList()
com/huawei/updatesdk/service/otaupdate/UpdateStatusCode = Huawei.Updatesdk.Service.Otaupdate.IUpdateStatusCode
  CANCEL = Cancel
  CHECK_FAILED = CheckFailed
  CONNECT_ERROR = ConnectError
  HAS_UPGRADE_INFO = HasUpgradeInfo
  IN_MARKET_UPDATING = InMarketUpdating
  INSTALL_FAILED = InstallFailed
  MARKET_FORBID = MarketForbid
  NO_UPGRADE_INFO = NoUpgradeInfo
  PARAMER_ERROR = ParamerError
com/huawei/updatesdk/support/pm/PackageInstallerActivity = Huawei.Updatesdk.Support.Pm.PackageInstallerActivity
  <init>()V = .ctor()
com/huawei/updatesdk/UpdateSdkAPI = Huawei.Updatesdk.UpdateSdkAPI
  <init>()V = .ctor()
  TAG = Tag
  checkAppUpdate(Landroid/content/Context;Lcom/huawei/updatesdk/service/otaupdate/CheckUpdateCallBack;ZZ)V = CheckAppUpdate(Android.Content.Context, Huawei.Updatesdk.Service.Otaupdate.ICheckUpdateCallBack, bool, bool)
  checkAppUpdate(Landroid/content/Context;Lcom/huawei/updatesdk/service/otaupdate/UpdateParams;Lcom/huawei/updatesdk/service/otaupdate/CheckUpdateCallBack;)V = CheckAppUpdate(Android.Content.Context, Huawei.Updatesdk.Service.Otaupdate.UpdateParams, Huawei.Updatesdk.Service.Otaupdate.ICheckUpdateCallBack)
  checkAppUpdateByAppInfo(Landroid/content/Context;Lcom/huawei/updatesdk/service/otaupdate/CheckUpdateCallBack;Lcom/huawei/updatesdk/service/appmgr/bean/AppInfoAdapter;)V = CheckAppUpdateByAppInfo(Android.Content.Context, Huawei.Updatesdk.Service.Otaupdate.ICheckUpdateCallBack, Com.Huawei.Updatesdk.Service.Appmgr.Bean.AppInfoAdapter)
  checkAppUpdateForHMSKit(Landroid/content/Context;Lcom/huawei/updatesdk/service/otaupdate/UpdateParams;Lcom/huawei/updatesdk/service/otaupdate/CheckUpdateCallBack;)V = CheckAppUpdateForHMSKit(Android.Content.Context, Huawei.Updatesdk.Service.Otaupdate.UpdateParams, Huawei.Updatesdk.Service.Otaupdate.ICheckUpdateCallBack)
  checkClientOTAUpdate(Landroid/content/Context;Lcom/huawei/updatesdk/service/otaupdate/CheckUpdateCallBack;ZIZ)V = CheckClientOTAUpdate(Android.Content.Context, Huawei.Updatesdk.Service.Otaupdate.ICheckUpdateCallBack, bool, int, bool)
  checkTargetAppUpdate(Landroid/content/Context;Ljava/lang/String;Lcom/huawei/updatesdk/service/otaupdate/CheckUpdateCallBack;)V = CheckTargetAppUpdate(Android.Content.Context, string, Huawei.Updatesdk.Service.Otaupdate.ICheckUpdateCallBack)
  releaseCallBack()V = ReleaseCallBack()
  setAppStorePkgName(Ljava/lang/String;)V = SetAppStorePkgName(string)
  setServiceZone(Ljava/lang/String;)V = SetServiceZone(string)
